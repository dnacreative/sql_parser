<?php
// $Id$

/**
 * @file
 * Provides parsing ability from sql strings into Drupal DBTNG objects.
 */

/**
 * Implements hook_menu().
 */
function sql_parser_menu() {
  $items['admin/config/development/sql-parser'] = array(
    'title' => 'SQL Parser',
    'description' => 'Parse SQL strings and convert to Drupal DBTNG objects.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sql_parser_parser_form'),
    'access arguments' => array('access content'),
  );

  return $items;
}

/**
 * Page Callback.
 */
function sql_parser_parser_form($form, &$form_state) {
  if (isset($form_state['input']['sql'])) {
    $parsed_sql = sql_parser_parse($form_state['input']['sql']);
    dpm($parsed_sql);
    if ($parsed_sql) {
      $raw_query_string = (string) $parsed_sql;
      $dbtng_query_string = sql_parser_convert_dbtng($parsed_sql);
    }
  }
  $form['sql'] = array(
    '#title' => 'Original SQL string',
    '#type' => 'textarea',
    '#default_value' => isset($form_state['input']['sql']) ? $form_state['input']['sql'] : '',
  );
  $form['parsed_sql'] = array(
    '#title' => 'Parsed SQL string',
    '#type' => 'textarea',
    '#attributes' => array(
      'readonly' => 'readonly',
    ),
    '#value' => isset($raw_query_string) ? $raw_query_string : '',
  );
  $form['output'] = array(
    '#title' => 'Database object syntax',
    '#type' => 'textarea',
    '#rows' => 10,
    '#attributes' => array(
      'readonly' => 'readonly',
    ),
    '#value' => isset($dbtng_query_string) ? $dbtng_query_string : '',
  );
  $form['submit'] = array(
    '#type' => 'button',
    '#value' => t('Convert'),
  );
  return $form;
}

/**
 * Parses a raw SQL string into a SqlObject.
 *
 * @param $sql
 *   Raw SQL string.
 *
 * @return SqlObject
 *   The parsed sql object.
 */
function sql_parser_parse($sql) {
  module_load_include('inc', 'sql_parser', 'includes/sql_dialect');
  module_load_include('inc', 'sql_parser', 'includes/sql_lexer');
  module_load_include('inc', 'sql_parser', 'includes/sql_parser');
  module_load_include('inc', 'sql_parser', 'includes/sql_object');

  $parser = new SqlParser($sql);
  $sql_object = $parser->parse();

  // Check if errors have been found in the parsing process.
  if ($parser->isException()) {
    $e = $parser->getException();
    drupal_set_message('<pre>' . $e . '</pre>');
    return FALSE;
  }
  else {
    return $sql_object;
  }
}

/**
 * Converts a SqlObject into a Drupal 7 DBNTG query string.
 *
 * @param SqlObject $parsed_sql
 *   Parsed SQL object.
 *
 * @return string
 *   Converted DBTNG string.
 */
function sql_parser_convert_dbtng(SqlObject $parsed_sql) {
  module_load_include('inc', 'sql_parser', 'includes/sql_converter');

  $converter = new SqlDBTNGConverter($parsed_sql);
  return $converter->convert();
}

/**
 * Converts a SqlObject into a raw Drupal 7 query string.
 *
 * @param SqlObject $parsed_sql
 *   Parsed SQL object.
 *
 * @return string
 *   Converted query string.
 */
function sql_parser_convert_string(SqlObject $parsed_sql) {
  module_load_include('inc', 'sql_parser', 'includes/sql_converter');

  $converter = new SqlStringConverter($parsed_sql);
  return $converter->convert();
}
